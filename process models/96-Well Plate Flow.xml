<?xml version="1.0"?>
<testset xmlns="http://cpee.org/ns/properties/2.0">
  <executionhandler>ruby</executionhandler>
  <dataelements>
    <samples>[]</samples>
  </dataelements>
  <endpoints>
    <timeout>https://cpee.org/services/timeout.php</timeout>
    <subprocess>https://cpee.org/flow/start/url/</subprocess>
    <send>https-post://cpee.org/ing/correlators/message/send/</send>
    <receive>https-get://cpee.org/ing/correlators/message/receive/</receive>
    <correlator>https://greschner.azurewebsites.net/backend/corr</correlator>
    <abandon>https://placeholder</abandon>
  </endpoints>
  <attributes>
    <info>96-Well Plate Flow</info>
    <creator>Christine Ashcreek</creator>
    <author>Christine Ashcreek</author>
    <modeltype>CPEE</modeltype>
    <theme>extended</theme>
    <design_dir>Theses.dir/Jan Greschner.dir/</design_dir>
    <design_stage>development</design_stage>
  </attributes>
  <description>
    <description xmlns="http://cpee.org/ns/description/1.0">
      <parallel wait="-1" cancel="last">
        <parallel_branch pass="" local="">
          <loop mode="pre_test" condition="!data.finished">
            <_probability>
              <_probability_min/>
              <_probability_max/>
              <_probability_avg/>
            </_probability>
            <call id="a3" endpoint="correlator">
              <parameters>
                <label>E1: wait for sample</label>
                <method>:post</method>
                <arguments>
                  <pid>3</pid>
                  <plateid>!data.plateid</plateid>
                </arguments>
              </parameters>
              <code>
                <prepare/>
                <finalize output="result">data.lastsample = result;</finalize>
                <update output="result"/>
                <rescue output="result"/>
              </code>
              <annotations>
                <_generic/>
                <_timing>
                  <_timing_weight/>
                  <_timing_avg/>
                  <explanations/>
                </_timing>
                <_shifting>
                  <_shifting_type>Duration</_shifting_type>
                </_shifting>
                <_context_data_analysis>
                  <probes/>
                  <ips/>
                </_context_data_analysis>
                <report>
                  <url/>
                </report>
                <_notes>
                  <_notes_general/>
                </_notes>
              </annotations>
              <documentation>
                <input/>
                <output/>
                <implementation>
                  <description/>
                </implementation>
                <code>
                  <description/>
                </code>
              </documentation>
            </call>
            <choose mode="exclusive">
              <alternative condition="data.lastsample != &quot;nil&quot;">
                <_probability>
                  <_probability_min/>
                  <_probability_max/>
                  <_probability_avg/>
                </_probability>
                <call id="a2" endpoint="subprocess">
                  <parameters>
                    <label>E2: spawn per sample flow</label>
                    <method>:post</method>
                    <arguments>
                      <behavior>fork_running</behavior>
                      <url>https://cpee.org/hub/server/Theses.dir/Jan%20Greschner.dir/Sample%20Flow.xml</url>
                      <init>
                        <sample>!data.lastsample</sample>
                        <plate_instance_url>!cpee.instance_url</plate_instance_url>
                      </init>
                      <endpoints/>
                      <attributes>
                        <info>Sample: #{data.lastsample['sampleid']}</info>
                      </attributes>
                      <customization/>
                    </arguments>
                  </parameters>
                  <code>
                    <prepare/>
                    <finalize output="result">data.samples &lt;&lt; data.lastsample.merge(result);</finalize>
                    <update output="result"/>
                    <rescue output="result"/>
                  </code>
                  <annotations>
                    <_generic/>
                    <_timing>
                      <_timing_weight/>
                      <_timing_avg/>
                      <explanations/>
                    </_timing>
                    <_shifting>
                      <_shifting_type>Duration</_shifting_type>
                    </_shifting>
                    <_context_data_analysis>
                      <probes/>
                      <ips/>
                    </_context_data_analysis>
                    <report>
                      <url/>
                    </report>
                    <_notes>
                      <_notes_general/>
                    </_notes>
                  </annotations>
                  <documentation>
                    <input/>
                    <output/>
                    <implementation>
                      <description/>
                    </implementation>
                    <code>
                      <description/>
                    </code>
                  </documentation>
                </call>
              </alternative>
              <otherwise/>
            </choose>
          </loop>
        </parallel_branch>
        <parallel_branch>
          <loop mode="pre_test" condition="!data.finished">
            <_probability>
              <_probability_min/>
              <_probability_max/>
              <_probability_avg/>
            </_probability>
            <call id="a5" endpoint="correlator">
              <parameters>
                <label>E3: wait for sample delete </label>
                <method>:post</method>
                <arguments>
                  <pid>4</pid>
                  <plateid>!data.plateid</plateid>
                </arguments>
              </parameters>
              <code>
                <prepare/>
                <finalize output="result">data.lastdeletesample = result</finalize>
                <update output="result"/>
                <rescue output="result"/>
              </code>
              <annotations>
                <_generic/>
                <_timing>
                  <_timing_weight/>
                  <_timing_avg/>
                  <explanations/>
                </_timing>
                <_shifting>
                  <_shifting_type>Duration</_shifting_type>
                </_shifting>
                <_context_data_analysis>
                  <probes/>
                  <ips/>
                </_context_data_analysis>
                <report>
                  <url/>
                </report>
                <_notes>
                  <_notes_general/>
                </_notes>
              </annotations>
              <documentation>
                <input/>
                <output/>
                <implementation>
                  <description/>
                </implementation>
                <code>
                  <description/>
                </code>
              </documentation>
            </call>
            <choose mode="exclusive">
              <alternative condition="data.lastdeletesample != &quot;nil&quot;">
                <loop mode="post_test" condition="data.deleteSample.nil?">
                  <_probability>
                    <_probability_min/>
                    <_probability_max/>
                    <_probability_avg/>
                  </_probability>
                  <manipulate id="a11" label="E4: check for sample">sleep 10
data.deleteSample = data.samples.detect do |sample|
  sample["sampleid"] == data.lastdeletesample["sampleid"] &amp;&amp; sample["position"] == data.lastdeletesample["position"]
end</manipulate>
                </loop>
                <_probability>
                  <_probability_min/>
                  <_probability_max/>
                  <_probability_avg/>
                </_probability>
                <call id="a6" endpoint="abandon">
                  <parameters>
                    <label>E5: stopping spawned sample</label>
                    <method>:put</method>
                    <arguments>
                      <value>stopping</value>
                    </arguments>
                  </parameters>
                  <code>
                    <prepare>endpoints.abandon = File.join(data.deleteSample["CPEE-INSTANCE-URL"],"properties","state",'/')</prepare>
                    <finalize output="result"/>
                    <update output="result"/>
                    <rescue output="result"/>
                  </code>
                  <annotations>
                    <_generic/>
                    <_timing>
                      <_timing_weight/>
                      <_timing_avg/>
                      <explanations/>
                    </_timing>
                    <_shifting>
                      <_shifting_type>Duration</_shifting_type>
                    </_shifting>
                    <_context_data_analysis>
                      <probes/>
                      <ips/>
                    </_context_data_analysis>
                    <report>
                      <url/>
                    </report>
                    <_notes>
                      <_notes_general/>
                    </_notes>
                  </annotations>
                  <documentation>
                    <input/>
                    <output/>
                    <implementation>
                      <description/>
                    </implementation>
                    <code>
                      <description/>
                    </code>
                  </documentation>
                </call>
                <call id="a8" endpoint="abandon">
                  <parameters>
                    <label>E6: abandon spawned sample</label>
                    <method>:put</method>
                    <arguments>
                      <value>abandoned</value>
                    </arguments>
                  </parameters>
                  <code>
                    <prepare>sleep 1.5
endpoints.abandon = File.join(data.deleteSample["CPEE-INSTANCE-URL"],"properties","state",'/')</prepare>
                    <finalize output="result">data.samples.delete_at(data.samples.index {|sample| sample["sampleid"] == data.lastdeletesample["sampleid"] &amp;&amp; sample["position"] == data.lastdeletesample["position"] } || data.samples.length)</finalize>
                    <update output="result"/>
                    <rescue output="result"/>
                  </code>
                  <annotations>
                    <_generic/>
                    <_timing>
                      <_timing_weight/>
                      <_timing_avg/>
                      <explanations/>
                    </_timing>
                    <_shifting>
                      <_shifting_type>Duration</_shifting_type>
                    </_shifting>
                    <_context_data_analysis>
                      <probes/>
                      <ips/>
                    </_context_data_analysis>
                    <report>
                      <url/>
                    </report>
                    <_notes>
                      <_notes_general/>
                    </_notes>
                  </annotations>
                  <documentation>
                    <input/>
                    <output/>
                    <implementation>
                      <description/>
                    </implementation>
                    <code>
                      <description/>
                    </code>
                  </documentation>
                </call>
              </alternative>
              <otherwise/>
            </choose>
          </loop>
        </parallel_branch>
        <parallel_branch pass="" local="">
          <call id="a1" endpoint="receive">
            <parameters>
              <label>E7: wait for finished plate</label>
              <arguments>
                <id>!data.plateid</id>
                <ttl>0</ttl>
                <delete>false</delete>
              </arguments>
            </parameters>
            <code>
              <prepare/>
              <finalize output="result">data.finished = true</finalize>
              <update output="result"/>
              <rescue output="result"/>
            </code>
            <annotations>
              <_generic/>
              <_timing>
                <_timing_weight/>
                <_timing_avg/>
                <explanations/>
              </_timing>
              <_shifting>
                <_shifting_type>Duration</_shifting_type>
              </_shifting>
              <_context_data_analysis>
                <probes/>
                <ips/>
              </_context_data_analysis>
              <report>
                <url/>
              </report>
              <_notes>
                <_notes_general/>
              </_notes>
            </annotations>
            <documentation>
              <input/>
              <output/>
              <implementation>
                <description/>
              </implementation>
              <code>
                <description/>
              </code>
            </documentation>
          </call>
          <call id="a4" endpoint="correlator">
            <parameters>
              <label>E8: delete: Wait for sample</label>
              <method>:post</method>
              <arguments>
                <pid>3</pid>
                <stop>true</stop>
              </arguments>
            </parameters>
            <code>
              <prepare/>
              <finalize output="result"/>
              <update output="result"/>
              <rescue output="result"/>
            </code>
            <annotations>
              <_generic/>
              <_timing>
                <_timing_weight/>
                <_timing_avg/>
                <explanations/>
              </_timing>
              <_shifting>
                <_shifting_type>Duration</_shifting_type>
              </_shifting>
              <_context_data_analysis>
                <probes/>
                <ips/>
              </_context_data_analysis>
              <report>
                <url/>
              </report>
              <_notes>
                <_notes_general/>
              </_notes>
            </annotations>
            <documentation>
              <input/>
              <output/>
              <implementation>
                <description/>
              </implementation>
              <code>
                <description/>
              </code>
            </documentation>
          </call>
          <call id="a7" endpoint="correlator">
            <parameters>
              <label>E9: delete: Wait for sample delete</label>
              <method>:post</method>
              <arguments>
                <pid>4</pid>
                <stop>true</stop>
              </arguments>
            </parameters>
            <code>
              <prepare/>
              <finalize output="result"/>
              <update output="result"/>
              <rescue output="result"/>
            </code>
            <annotations>
              <_generic/>
              <_timing>
                <_timing_weight/>
                <_timing_avg/>
                <explanations/>
              </_timing>
              <_shifting>
                <_shifting_type>Duration</_shifting_type>
              </_shifting>
              <_context_data_analysis>
                <probes/>
                <ips/>
              </_context_data_analysis>
              <report>
                <url/>
              </report>
              <_notes>
                <_notes_general/>
              </_notes>
            </annotations>
            <documentation>
              <input/>
              <output/>
              <implementation>
                <description/>
              </implementation>
              <code>
                <description/>
              </code>
            </documentation>
          </call>
        </parallel_branch>
      </parallel>
      <call id="a10" endpoint="correlator">
        <parameters>
          <label>E10: import .eps file</label>
          <method>:post</method>
          <arguments>
            <pid>5</pid>
            <plateid>!data.plateid</plateid>
          </arguments>
        </parameters>
        <code>
          <prepare/>
          <finalize output="result"/>
          <update output="result"/>
          <rescue output="result"/>
        </code>
        <annotations>
          <_generic/>
          <_timing>
            <_timing_weight/>
            <_timing_avg/>
            <explanations/>
          </_timing>
          <_shifting>
            <_shifting_type>Duration</_shifting_type>
          </_shifting>
          <_context_data_analysis>
            <probes/>
            <ips/>
          </_context_data_analysis>
          <report>
            <url/>
          </report>
          <_notes>
            <_notes_general/>
          </_notes>
        </annotations>
        <documentation>
          <input/>
          <output/>
          <implementation>
            <description/>
          </implementation>
          <code>
            <description/>
          </code>
        </documentation>
      </call>
      <call id="a12" endpoint="correlator">
        <parameters>
          <label>E11: validate plate</label>
          <method>:post</method>
          <arguments>
            <pid>7</pid>
            <plateid>!data.plateid</plateid>
          </arguments>
        </parameters>
        <code>
          <prepare/>
          <finalize output="result"/>
          <update output="result"/>
          <rescue output="result"/>
        </code>
        <annotations>
          <_generic/>
          <_timing>
            <_timing_weight/>
            <_timing_avg/>
            <explanations/>
          </_timing>
          <_shifting>
            <_shifting_type>Duration</_shifting_type>
          </_shifting>
          <_context_data_analysis>
            <probes/>
            <ips/>
          </_context_data_analysis>
          <report>
            <url/>
          </report>
          <_notes>
            <_notes_general/>
          </_notes>
        </annotations>
        <documentation>
          <input/>
          <output/>
          <implementation>
            <description/>
          </implementation>
          <code>
            <description/>
          </code>
        </documentation>
      </call>
      <call id="a13" endpoint="send">
        <parameters>
          <label>E12: send plate validation</label>
          <arguments>
            <id>!data.plateid.to_s + "a"</id>
            <message/>
            <ttl>0</ttl>
          </arguments>
        </parameters>
        <code>
          <prepare/>
          <finalize output="result"/>
          <update output="result"/>
          <rescue output="result"/>
        </code>
        <annotations>
          <_generic/>
          <_timing>
            <_timing_weight/>
            <_timing_avg/>
            <explanations/>
          </_timing>
          <_shifting>
            <_shifting_type>Duration</_shifting_type>
          </_shifting>
          <_context_data_analysis>
            <probes/>
            <ips/>
          </_context_data_analysis>
          <report>
            <url/>
          </report>
          <_notes>
            <_notes_general/>
          </_notes>
        </annotations>
        <documentation>
          <input/>
          <output/>
          <implementation>
            <description/>
          </implementation>
          <code>
            <description/>
          </code>
        </documentation>
      </call>
    </description>
  </description>
  <transformation>
    <description type="copy"/>
    <dataelements type="none"/>
    <endpoints type="none"/>
  </transformation>
</testset>
